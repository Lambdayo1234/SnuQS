# Generated from QASM.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,40,312,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,
        1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,7,
        1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,13,
        1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
        1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,
        1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,
        1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,
        1,26,1,26,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,
        1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,5,32,202,
        8,32,10,32,12,32,205,9,32,1,33,4,33,208,8,33,11,33,12,33,209,1,33,
        5,33,213,8,33,10,33,12,33,216,9,33,1,33,3,33,219,8,33,1,34,4,34,
        222,8,34,11,34,12,34,223,1,34,1,34,5,34,228,8,34,10,34,12,34,231,
        9,34,1,34,5,34,234,8,34,10,34,12,34,237,9,34,1,34,1,34,4,34,241,
        8,34,11,34,12,34,242,3,34,245,8,34,1,34,1,34,3,34,249,8,34,1,34,
        4,34,252,8,34,11,34,12,34,253,3,34,256,8,34,1,35,1,35,4,35,260,8,
        35,11,35,12,35,261,1,35,1,35,1,35,4,35,267,8,35,11,35,12,35,268,
        1,35,3,35,272,8,35,1,36,4,36,275,8,36,11,36,12,36,276,1,36,1,36,
        1,37,4,37,282,8,37,11,37,12,37,283,1,37,1,37,1,38,1,38,1,38,1,38,
        5,38,292,8,38,10,38,12,38,295,9,38,1,38,1,38,1,39,1,39,1,39,1,39,
        5,39,303,8,39,10,39,12,39,306,9,39,1,39,1,39,1,39,1,39,1,39,3,261,
        268,304,0,40,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
        23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
        45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
        67,34,69,35,71,36,73,37,75,38,77,39,79,40,1,0,10,1,0,97,122,4,0,
        48,57,65,90,95,95,97,122,1,0,49,57,1,0,48,57,2,0,69,69,101,101,2,
        0,43,43,45,45,3,0,9,10,13,13,34,34,3,0,9,10,13,13,39,39,2,0,9,9,
        32,32,2,0,10,10,13,13,330,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,
        7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
        1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
        1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,
        1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,
        1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
        1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,
        1,0,0,0,0,79,1,0,0,0,1,81,1,0,0,0,3,90,1,0,0,0,5,92,1,0,0,0,7,97,
        1,0,0,0,9,99,1,0,0,0,11,101,1,0,0,0,13,106,1,0,0,0,15,108,1,0,0,
        0,17,113,1,0,0,0,19,115,1,0,0,0,21,117,1,0,0,0,23,119,1,0,0,0,25,
        121,1,0,0,0,27,124,1,0,0,0,29,126,1,0,0,0,31,134,1,0,0,0,33,141,
        1,0,0,0,35,149,1,0,0,0,37,152,1,0,0,0,39,158,1,0,0,0,41,161,1,0,
        0,0,43,164,1,0,0,0,45,167,1,0,0,0,47,169,1,0,0,0,49,171,1,0,0,0,
        51,173,1,0,0,0,53,175,1,0,0,0,55,179,1,0,0,0,57,183,1,0,0,0,59,187,
        1,0,0,0,61,191,1,0,0,0,63,194,1,0,0,0,65,199,1,0,0,0,67,218,1,0,
        0,0,69,244,1,0,0,0,71,271,1,0,0,0,73,274,1,0,0,0,75,281,1,0,0,0,
        77,287,1,0,0,0,79,298,1,0,0,0,81,82,5,79,0,0,82,83,5,80,0,0,83,84,
        5,69,0,0,84,85,5,78,0,0,85,86,5,81,0,0,86,87,5,65,0,0,87,88,5,83,
        0,0,88,89,5,77,0,0,89,2,1,0,0,0,90,91,5,59,0,0,91,4,1,0,0,0,92,93,
        5,113,0,0,93,94,5,114,0,0,94,95,5,101,0,0,95,96,5,103,0,0,96,6,1,
        0,0,0,97,98,5,91,0,0,98,8,1,0,0,0,99,100,5,93,0,0,100,10,1,0,0,0,
        101,102,5,99,0,0,102,103,5,114,0,0,103,104,5,101,0,0,104,105,5,103,
        0,0,105,12,1,0,0,0,106,107,5,125,0,0,107,14,1,0,0,0,108,109,5,103,
        0,0,109,110,5,97,0,0,110,111,5,116,0,0,111,112,5,101,0,0,112,16,
        1,0,0,0,113,114,5,123,0,0,114,18,1,0,0,0,115,116,5,40,0,0,116,20,
        1,0,0,0,117,118,5,41,0,0,118,22,1,0,0,0,119,120,5,85,0,0,120,24,
        1,0,0,0,121,122,5,67,0,0,122,123,5,88,0,0,123,26,1,0,0,0,124,125,
        5,44,0,0,125,28,1,0,0,0,126,127,5,98,0,0,127,128,5,97,0,0,128,129,
        5,114,0,0,129,130,5,114,0,0,130,131,5,105,0,0,131,132,5,101,0,0,
        132,133,5,114,0,0,133,30,1,0,0,0,134,135,5,111,0,0,135,136,5,112,
        0,0,136,137,5,97,0,0,137,138,5,113,0,0,138,139,5,117,0,0,139,140,
        5,101,0,0,140,32,1,0,0,0,141,142,5,109,0,0,142,143,5,101,0,0,143,
        144,5,97,0,0,144,145,5,115,0,0,145,146,5,117,0,0,146,147,5,114,0,
        0,147,148,5,101,0,0,148,34,1,0,0,0,149,150,5,45,0,0,150,151,5,62,
        0,0,151,36,1,0,0,0,152,153,5,114,0,0,153,154,5,101,0,0,154,155,5,
        115,0,0,155,156,5,101,0,0,156,157,5,116,0,0,157,38,1,0,0,0,158,159,
        5,105,0,0,159,160,5,102,0,0,160,40,1,0,0,0,161,162,5,61,0,0,162,
        163,5,61,0,0,163,42,1,0,0,0,164,165,5,112,0,0,165,166,5,105,0,0,
        166,44,1,0,0,0,167,168,5,43,0,0,168,46,1,0,0,0,169,170,5,45,0,0,
        170,48,1,0,0,0,171,172,5,42,0,0,172,50,1,0,0,0,173,174,5,47,0,0,
        174,52,1,0,0,0,175,176,5,115,0,0,176,177,5,105,0,0,177,178,5,110,
        0,0,178,54,1,0,0,0,179,180,5,99,0,0,180,181,5,111,0,0,181,182,5,
        115,0,0,182,56,1,0,0,0,183,184,5,116,0,0,184,185,5,97,0,0,185,186,
        5,110,0,0,186,58,1,0,0,0,187,188,5,101,0,0,188,189,5,120,0,0,189,
        190,5,112,0,0,190,60,1,0,0,0,191,192,5,108,0,0,192,193,5,110,0,0,
        193,62,1,0,0,0,194,195,5,115,0,0,195,196,5,113,0,0,196,197,5,114,
        0,0,197,198,5,116,0,0,198,64,1,0,0,0,199,203,7,0,0,0,200,202,7,1,
        0,0,201,200,1,0,0,0,202,205,1,0,0,0,203,201,1,0,0,0,203,204,1,0,
        0,0,204,66,1,0,0,0,205,203,1,0,0,0,206,208,7,2,0,0,207,206,1,0,0,
        0,208,209,1,0,0,0,209,207,1,0,0,0,209,210,1,0,0,0,210,214,1,0,0,
        0,211,213,7,3,0,0,212,211,1,0,0,0,213,216,1,0,0,0,214,212,1,0,0,
        0,214,215,1,0,0,0,215,219,1,0,0,0,216,214,1,0,0,0,217,219,5,48,0,
        0,218,207,1,0,0,0,218,217,1,0,0,0,219,68,1,0,0,0,220,222,7,3,0,0,
        221,220,1,0,0,0,222,223,1,0,0,0,223,221,1,0,0,0,223,224,1,0,0,0,
        224,225,1,0,0,0,225,229,5,46,0,0,226,228,7,3,0,0,227,226,1,0,0,0,
        228,231,1,0,0,0,229,227,1,0,0,0,229,230,1,0,0,0,230,245,1,0,0,0,
        231,229,1,0,0,0,232,234,7,3,0,0,233,232,1,0,0,0,234,237,1,0,0,0,
        235,233,1,0,0,0,235,236,1,0,0,0,236,238,1,0,0,0,237,235,1,0,0,0,
        238,240,5,46,0,0,239,241,7,3,0,0,240,239,1,0,0,0,241,242,1,0,0,0,
        242,240,1,0,0,0,242,243,1,0,0,0,243,245,1,0,0,0,244,221,1,0,0,0,
        244,235,1,0,0,0,245,255,1,0,0,0,246,248,7,4,0,0,247,249,7,5,0,0,
        248,247,1,0,0,0,248,249,1,0,0,0,249,251,1,0,0,0,250,252,7,3,0,0,
        251,250,1,0,0,0,252,253,1,0,0,0,253,251,1,0,0,0,253,254,1,0,0,0,
        254,256,1,0,0,0,255,246,1,0,0,0,255,256,1,0,0,0,256,70,1,0,0,0,257,
        259,5,34,0,0,258,260,8,6,0,0,259,258,1,0,0,0,260,261,1,0,0,0,261,
        262,1,0,0,0,261,259,1,0,0,0,262,263,1,0,0,0,263,272,5,34,0,0,264,
        266,5,39,0,0,265,267,8,7,0,0,266,265,1,0,0,0,267,268,1,0,0,0,268,
        269,1,0,0,0,268,266,1,0,0,0,269,270,1,0,0,0,270,272,5,39,0,0,271,
        257,1,0,0,0,271,264,1,0,0,0,272,72,1,0,0,0,273,275,7,8,0,0,274,273,
        1,0,0,0,275,276,1,0,0,0,276,274,1,0,0,0,276,277,1,0,0,0,277,278,
        1,0,0,0,278,279,6,36,0,0,279,74,1,0,0,0,280,282,7,9,0,0,281,280,
        1,0,0,0,282,283,1,0,0,0,283,281,1,0,0,0,283,284,1,0,0,0,284,285,
        1,0,0,0,285,286,6,37,0,0,286,76,1,0,0,0,287,288,5,47,0,0,288,289,
        5,47,0,0,289,293,1,0,0,0,290,292,8,9,0,0,291,290,1,0,0,0,292,295,
        1,0,0,0,293,291,1,0,0,0,293,294,1,0,0,0,294,296,1,0,0,0,295,293,
        1,0,0,0,296,297,6,38,0,0,297,78,1,0,0,0,298,299,5,47,0,0,299,300,
        5,42,0,0,300,304,1,0,0,0,301,303,9,0,0,0,302,301,1,0,0,0,303,306,
        1,0,0,0,304,305,1,0,0,0,304,302,1,0,0,0,305,307,1,0,0,0,306,304,
        1,0,0,0,307,308,5,42,0,0,308,309,5,47,0,0,309,310,1,0,0,0,310,311,
        6,39,0,0,311,80,1,0,0,0,20,0,203,209,214,218,223,229,235,242,244,
        248,253,255,261,268,271,276,283,293,304,1,6,0,0
    ]

class QASMLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    ID = 33
    NNINTEGER = 34
    REAL = 35
    STRING = 36
    Whitespace = 37
    Newline = 38
    LineComment = 39
    BlockComment = 40

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'OPENQASM'", "';'", "'qreg'", "'['", "']'", "'creg'", "'}'", 
            "'gate'", "'{'", "'('", "')'", "'U'", "'CX'", "','", "'barrier'", 
            "'opaque'", "'measure'", "'->'", "'reset'", "'if'", "'=='", 
            "'pi'", "'+'", "'-'", "'*'", "'/'", "'sin'", "'cos'", "'tan'", 
            "'exp'", "'ln'", "'sqrt'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "NNINTEGER", "REAL", "STRING", "Whitespace", "Newline", 
            "LineComment", "BlockComment" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "ID", "NNINTEGER", "REAL", "STRING", "Whitespace", "Newline", 
                  "LineComment", "BlockComment" ]

    grammarFileName = "QASM.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


